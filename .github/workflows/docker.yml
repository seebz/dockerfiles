name: Docker

on:
  push:
    branches:
      - 'master'
  # Runs this workflow weekly (on monday)
  schedule:
    - cron: '0 0 * * 1'
  # Allows to run this workflow manually (from the Actions tab)
  workflow_dispatch:

jobs:

  repository:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      -
        name: Search Dockerfiles
        id: dockerfiles
        run: |
          DOCKERFILES=( $(find . -not -path '*/.*' -type f -name Dockerfile) )
          JSON="[$( printf -- '"%s",' "${DOCKERFILES[@]}" | sed 's/,$//' )]"
          echo "::set-output name=paths::$JSON"
    outputs:
      dockerfiles: ${{ steps.dockerfiles.outputs.paths }}

  docker:
    needs: repository
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockefile: ${{ fromJson(needs.repository.outputs.dockerfiles) }}
    steps:
      - uses: actions/checkout@v3
      -
        name: Setup vars
        id: setup
        run: |
          function tuc {
            local stdin; read -d '' -u 0 stdin;
            echo "$stdin" | rev | cut $@ | rev
          }

          IMG_FILE=${{ matrix.dockefile }}
          echo "::set-output name=file::$IMG_FILE"

          IMG_NAME=$( echo "${{ matrix.dockefile }}" | tuc -d "/" -f 3 )
          echo "::set-output name=name::$IMG_NAME"

          IMG_TAG=$( echo "${{ matrix.dockefile }}" | tuc -d "/" -f 2 )
          echo "::set-output name=tag::$IMG_TAG"
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push image
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ${{ steps.setup.outputs.file }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.setup.outputs.name }}:${{ steps.setup.outputs.tag }}
